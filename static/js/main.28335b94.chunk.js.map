{"version":3,"sources":["images/arya.png","images/bran.png","images/brienne.png","images/cersei.png","images/daeny.png","images/jaime.png","images/jon.png","images/sansa.png","images/theon.png","images/tormund.png","images/tyrion.png","components/NavMessage/index.js","components/Nav/index.js","components/Header/index.js","components/Container/index.js","components/ClickItem/index.js","components/Footer/index.js","components/Game/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","NavMessage","state","message","animating","renderMessage","prevState","score","topScore","newState","this","props","setState","className","onAnimationEnd","Component","Nav","href","Header","Container","children","ClickItem","role","aria-label","onClick","handleClick","id","style","backgroundImage","image","shake","Footer","alt","src","data","arya","bran","brienne","cersei","daeny","jaime","jon","sansa","theon","tormund","tyrion","Game","handleCorrectGuess","newData","newScore","newTopScore","Math","max","shuffleData","handleIncorrectGuess","resetData","map","item","clicked","i","length","j","floor","random","temp","handleItemClick","guessedCorrectly","newItem","key","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,qRCkD5BC,G,iNA5CXC,MAAQ,CACJC,QAAS,GACTC,WAAW,G,EAmBfC,cAAgB,WACZ,OAAQ,EAAKH,MAAMC,SACf,IAAK,UACD,MAAO,yBACX,IAAK,YACD,MAAO,2BACX,QACI,MAAO,6B,oFAvBqBG,GAAY,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAClBC,EAAW,CAAEL,WAAW,GAG1BK,EAASN,QADC,IAAVI,GAA4B,IAAbC,EACI,GACF,IAAVD,GAAeC,EAAW,EACd,YAEA,UAGnBD,IAAUG,KAAKC,MAAMJ,OAASG,KAAKR,MAAMC,UAAYM,EAASN,SAC9DO,KAAKE,SAASH,K,+BAeZ,IAAD,OACL,OACI,wBACII,UAAWH,KAAKR,MAAME,UAAYM,KAAKR,MAAMC,QAAU,GACvDW,eAAgB,kBAAM,EAAKF,SAAS,CAAER,WAAW,MAEhDM,KAAKL,qB,GAvCGU,c,MCiBVC,MAhBf,SAAaL,GACT,OACI,yBAAKE,UAAU,UACX,4BACI,wBAAIA,UAAU,SACV,uBAAGI,KAAK,KAAR,gBAEJ,kBAAC,EAAD,CAAYV,MAAOI,EAAMJ,MAAOC,SAAUG,EAAMH,WAChD,sCACYG,EAAMJ,MADlB,iBACuCI,EAAMH,a,MCH9CU,MATf,WACI,OACI,4BAAQL,UAAU,UACd,4CACA,0G,MCAGM,MAJf,SAAmBR,GACf,OAAO,0BAAME,UAAU,aAAaF,EAAMS,W,wBCY/BC,MAZf,SAAmBV,GACf,OACI,yBACIW,KAAK,MACLC,aAAW,aACXC,QAAS,kBAAMb,EAAMc,YAAYd,EAAMe,KACvCC,MAAO,CAAEC,gBAAgB,QAAD,OAAUjB,EAAMkB,MAAhB,OACxBhB,UAAS,oBAAeF,EAAMmB,MAAQ,SAAW,O,MCE9CC,MAVf,WACI,OACI,4BAAQlB,UAAU,UACd,yBAAKA,UAAU,UAAf,gBACiB,yBAAKmB,IAAI,QAAQC,IAAI,+B,0KCa5CC,EAAO,CAAC,CACV,GAAM,EACN,MAASC,IACT,SAAW,GAEf,CACI,GAAM,EACN,MAASC,IACT,SAAW,GAEf,CACI,GAAM,EACN,MAASC,IACT,SAAW,GAEf,CACI,GAAM,EACN,MAASC,IACT,SAAW,GAEf,CACI,GAAM,EACN,MAASC,IACT,SAAW,GAEf,CACI,GAAM,EACN,MAASC,IACT,SAAW,GAEf,CACI,GAAM,EACN,MAASC,IACT,SAAW,GAEf,CACI,GAAM,EACN,MAASC,IACT,SAAW,GAEf,CACI,GAAM,EACN,MAASC,IACT,SAAW,GAEf,CACI,GAAM,GACN,MAASC,IACT,SAAW,GAEf,CACI,GAAM,GACN,MAASC,IACT,SAAW,IA0FAC,E,2MArFX5C,MAAQ,CACJgC,OACA3B,MAAO,EACPC,SAAU,G,EAOduC,mBAAqB,SAAAC,GAAY,IAAD,EACA,EAAK9C,MAAzBM,EADoB,EACpBA,SACFyC,EAFsB,EACV1C,MACO,EACnB2C,EAAcC,KAAKC,IAAIH,EAAUzC,GAEvC,EAAKI,SAAS,CACVsB,KAAM,EAAKmB,YAAYL,GACvBzC,MAAO0C,EACPzC,SAAU0C,K,EAIlBI,qBAAuB,SAAApB,GACnB,EAAKtB,SAAS,CACVsB,KAAM,EAAKqB,UAAUrB,GACrB3B,MAAO,K,EAIfgD,UAAY,SAAArB,GACR,IAAMqB,EAAYrB,EAAKsB,KAAI,SAAAC,GAAI,sBAAUA,EAAV,CAAgBC,SAAS,OACxD,OAAO,EAAKL,YAAYE,I,EAG5BF,YAAc,SAAAnB,GAEV,IADA,IAAIyB,EAAIzB,EAAK0B,OAAS,EACfD,EAAI,GAAG,CACV,IAAME,EAAIV,KAAKW,MAAMX,KAAKY,UAAYJ,EAAI,IACpCK,EAAO9B,EAAKyB,GAClBzB,EAAKyB,GAAKzB,EAAK2B,GACf3B,EAAK2B,GAAKG,EACVL,IAEJ,OAAOzB,G,EAGX+B,gBAAkB,SAAAvC,GACd,IAAIwC,GAAmB,EACjBlB,EAAU,EAAK9C,MAAMgC,KAAKsB,KAAI,SAAAC,GAChC,IAAMU,EAAO,eAAQV,GAOrB,OANIU,EAAQzC,KAAOA,IACVyC,EAAQT,UACTS,EAAQT,SAAU,EAClBQ,GAAmB,IAGpBC,KAEXD,EACM,EAAKnB,mBAAmBC,GACxB,EAAKM,qBAAqBN,I,mFArDhCtC,KAAKE,SAAS,CAAEsB,KAAMxB,KAAK2C,YAAY3C,KAAKR,MAAMgC,U,+BAwD5C,IAAD,OACL,OACI,6BACI,kBAAC,EAAD,CAAK3B,MAAOG,KAAKR,MAAMK,MAAOC,SAAUE,KAAKR,MAAMM,WACnD,kBAAC,EAAD,MACA,kBAAC,EAAD,KACKE,KAAKR,MAAMgC,KAAKsB,KAAI,SAAAC,GAAI,OACrB,kBAAC,EAAD,CACIW,IAAKX,EAAK/B,GACVA,GAAI+B,EAAK/B,GACTI,OAAQ,EAAK5B,MAAMK,OAAS,EAAKL,MAAMM,SACvCiB,YAAa,EAAKwC,gBAClBpC,MAAO4B,EAAK5B,YAIxB,kBAAC,EAAD,W,GAhFGd,aCtEJsD,MAJf,WACI,OAAO,kBAAC,EAAD,OCMLC,G,MAAcC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,4DA6BR,SAASC,EAAgBC,GACrBC,UAAUC,cACLC,SAASH,GACTI,MAAK,SAAAC,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBlF,QACb4E,UAAUC,cAAcQ,WAKxBC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAM/BC,OAAM,SAAAC,GACHH,QAAQG,MAAM,4CAA6CA,MChEvEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDclC,WACX,GAA6C,kBAAmBjB,UAAW,CAGvE,GADkB,IAAIkB,IAAIC,cAAwBzB,OAAOC,UAC3CyB,SAAW1B,OAAOC,SAASyB,OAIrC,OAGJ1B,OAAO2B,iBAAiB,QAAQ,WAC5B,IAAMtB,EAAK,UAAMoB,cAAN,sBAEP3B,EAwChB,SAAiCO,GAE7BuB,MAAMvB,GACDI,MAAK,SAAAoB,GAGsB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C3B,UAAUC,cAAc2B,MAAMzB,MAAK,SAAAC,GAC/BA,EAAayB,aAAa1B,MAAK,WAC3BT,OAAOC,SAASmC,eAKxBhC,EAAgBC,MAGvBa,OAAM,WACHF,QAAQC,IACJ,oEA5DAoB,CAAwBhC,GAGxBD,EAAgBC,OChChCiC,K","file":"static/js/main.28335b94.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arya.b73e94bf.png\";","module.exports = __webpack_public_path__ + \"static/media/bran.d7dfed81.png\";","module.exports = __webpack_public_path__ + \"static/media/brienne.4eeed792.png\";","module.exports = __webpack_public_path__ + \"static/media/cersei.cfb1c500.png\";","module.exports = __webpack_public_path__ + \"static/media/daeny.4feb96b3.png\";","module.exports = __webpack_public_path__ + \"static/media/jaime.3270b2b2.png\";","module.exports = __webpack_public_path__ + \"static/media/jon.34dcdd88.png\";","module.exports = __webpack_public_path__ + \"static/media/sansa.b64dca8d.png\";","module.exports = __webpack_public_path__ + \"static/media/theon.78e9a69b.png\";","module.exports = __webpack_public_path__ + \"static/media/tormund.363a2b25.png\";","module.exports = __webpack_public_path__ + \"static/media/tyrion.73ffe97a.png\";","import React, { Component } from \"react\";\nimport \"./style.css\";\n\n// NavMessage renders an li tag containing an message for the user\n\nclass NavMessage extends Component {\n    state = {\n        message: \"\",\n        animating: false\n    };\n\n    componentDidUpdate({ score, topScore }, prevState) {\n        const newState = { animating: true };\n\n        if (score === 0 && topScore === 0) {\n            newState.message = \"\";\n        } else if (score === 0 && topScore > 0) {\n            newState.message = \"incorrect\";\n        } else {\n            newState.message = \"correct\";\n        }\n\n        if (score !== this.props.score || this.state.message !== newState.message) {\n            this.setState(newState);\n        }\n    }\n\n    renderMessage = () => {\n        switch (this.state.message) {\n            case \"correct\":\n                return \"You guessed correctly!\";\n            case \"incorrect\":\n                return \"You guessed incorrectly!\";\n            default:\n                return \"Click an image to begin!\";\n        }\n    };\n\n    render() {\n        return (\n            <li\n                className={this.state.animating ? this.state.message : \"\"}\n                onAnimationEnd={() => this.setState({ animating: false })}\n            >\n                {this.renderMessage()}\n            </li>\n        );\n    }\n}\n\nexport default NavMessage;\n","import React from \"react\";\nimport NavMessage from \"../NavMessage\";\nimport \"./style.css\";\n\n// Component for the Navbar\n\nfunction Nav(props) {\n    return (\n        <nav className=\"navbar\">\n            <ul>\n                <li className=\"brand\">\n                    <a href=\"/\">Clicky Game</a>\n                </li>\n                <NavMessage score={props.score} topScore={props.topScore} />\n                <li>\n                    Score: {props.score} | Top Score: {props.topScore}\n                </li>\n            </ul>\n        </nav>\n    );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <h1>Clicky Game!</h1>\n            <h2>Click on an image to earn points, but don't click on any more than once!</h2>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Container(props) {\n    return <main className=\"container\">{props.children}</main>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport \"./style.css\";\nimport arya from \"../../images/arya.png\"\n\nfunction ClickItem(props) {\n    return (\n        <div\n            role=\"img\"\n            aria-label=\"click item\"\n            onClick={() => props.handleClick(props.id)}\n            style={{ backgroundImage: `url(\"${props.image}\")` }}\n            className={`click-item${props.shake ? \" shake\" : \"\"}`}\n        />\n    );\n}\n\nexport default ClickItem;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <div className=\"bottom\">\n                Clicky Game! <img alt=\"react\" src=\"assets/images/react.svg\" />\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Nav from \"../Nav\";\nimport Header from \"../Header\";\nimport Container from \"../Container\";\nimport ClickItem from \"../ClickItem\";\nimport Footer from \"../Footer\";\nimport arya from \"../../images/arya.png\"\nimport bran from \"../../images/bran.png\"\nimport brienne from \"../../images/brienne.png\"\nimport cersei from \"../../images/cersei.png\"\nimport daeny from \"../../images/daeny.png\"\nimport jaime from \"../../images/jaime.png\"\nimport jon from \"../../images/jon.png\"\nimport sansa from \"../../images/sansa.png\"\nimport theon from \"../../images/theon.png\"\nimport tormund from \"../../images/tormund.png\"\nimport tyrion from \"../../images/tyrion.png\"\n\n// import data from \"../../data.json\";\n\nconst data = [{\n    \"id\": 1,\n    \"image\": arya,\n    \"clicked\": false\n},\n{\n    \"id\": 2,\n    \"image\": bran,\n    \"clicked\": false\n},\n{\n    \"id\": 3,\n    \"image\": brienne,\n    \"clicked\": false\n},\n{\n    \"id\": 4,\n    \"image\": cersei,\n    \"clicked\": false\n},\n{\n    \"id\": 5,\n    \"image\": daeny,\n    \"clicked\": false\n},\n{\n    \"id\": 6,\n    \"image\": jaime,\n    \"clicked\": false\n},\n{\n    \"id\": 7,\n    \"image\": jon,\n    \"clicked\": false\n},\n{\n    \"id\": 8,\n    \"image\": sansa,\n    \"clicked\": false\n},\n{\n    \"id\": 9,\n    \"image\": theon,\n    \"clicked\": false\n},\n{\n    \"id\": 10,\n    \"image\": tormund,\n    \"clicked\": false\n},\n{\n    \"id\": 11,\n    \"image\": tyrion,\n    \"clicked\": false\n}\n];\n\nclass Game extends Component {\n    state = {\n        data,\n        score: 0,\n        topScore: 0\n    };\n\n    componentDidMount() {\n        this.setState({ data: this.shuffleData(this.state.data) });\n    }\n\n    handleCorrectGuess = newData => {\n        const { topScore, score } = this.state;\n        const newScore = score + 1;\n        const newTopScore = Math.max(newScore, topScore);\n\n        this.setState({\n            data: this.shuffleData(newData),\n            score: newScore,\n            topScore: newTopScore\n        });\n    };\n\n    handleIncorrectGuess = data => {\n        this.setState({\n            data: this.resetData(data),\n            score: 0\n        });\n    };\n\n    resetData = data => {\n        const resetData = data.map(item => ({ ...item, clicked: false }));\n        return this.shuffleData(resetData);\n    };\n\n    shuffleData = data => {\n        let i = data.length - 1;\n        while (i > 0) {\n            const j = Math.floor(Math.random() * (i + 1));\n            const temp = data[i];\n            data[i] = data[j];\n            data[j] = temp;\n            i--;\n        }\n        return data;\n    };\n\n    handleItemClick = id => {\n        let guessedCorrectly = false;\n        const newData = this.state.data.map(item => {\n            const newItem = { ...item };\n            if (newItem.id === id) {\n                if (!newItem.clicked) {\n                    newItem.clicked = true;\n                    guessedCorrectly = true;\n                }\n            }\n            return newItem;\n        });\n        guessedCorrectly\n            ? this.handleCorrectGuess(newData)\n            : this.handleIncorrectGuess(newData);\n    };\n\n    render() {\n        return (\n            <div>\n                <Nav score={this.state.score} topScore={this.state.topScore} />\n                <Header />\n                <Container>\n                    {this.state.data.map(item => (\n                        <ClickItem\n                            key={item.id}\n                            id={item.id}\n                            shake={!this.state.score && this.state.topScore}\n                            handleClick={this.handleItemClick}\n                            image={item.image}\n                        />\n                    ))}\n                </Container>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default Game;\n","import React from \"react\";\nimport Game from \"./components/Game\";\n\nfunction App() {\n    return <Game />;\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log(\"New content is available; please refresh.\");\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();"],"sourceRoot":""}